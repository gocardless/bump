#!/usr/bin/env ruby
# frozen_string_literal: true

unless ENV["RACK_ENV"] == "production"
  require "highline/import"
  require "dotenv"
  Dotenv.load
end

require File.expand_path("../../app/workers/dependency_file_fetcher", __FILE__)
require File.expand_path("../../lib/bump/github", __FILE__)

repo_validator = lambda do |repo_name|
  begin
    Bump::Github.client.repository(repo_name)
    true
  rescue Octokit::NotFound
    false
  end
end

language_validator = ->(l) { %w(ruby node python).include?(l) }

if ARGV.empty?
  repo =
    ask("Which repo would you like to bump dependencies for? ") do |question|
      question.validate = repo_validator
      question.responses[:invalid_type] =
        "Could not access that repo. Make sure you use the format "\
        "'gocardless/bump', and that your GitHub token has read/write "\
        "access to the given repo."
    end

  language = ARGV[1] || choose do |menu|
    menu.header = "Which language would you like to bump dependencies for?"
    menu.index = :none
    menu.choices(:ruby, :node, :python)
  end
else
  repo = ARGV[0]
  language = ARGV[1]

  unless repo_validator.call(repo) && language_validator.call(language)
    puts "Bad repo/language"
    raise
  end
end

Workers::DependencyFileFetcher.
  perform_async("repo" => { "language" => language, "name" => repo })

puts "Great success - a job has been enqueued to bump the "\
  "#{language} dependency files for #{repo}."
